---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: bootstrap-issuer
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: root-certificate
spec:
  isCA: true
  secretName: root-certificate
  commonName: "Root Certificate"
  privateKey:
    algorithm: RSA
    size: 4096
    encoding: PKCS8
  issuerRef:
    name: bootstrap-issuer
    kind: Issuer
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: root-issuer
spec:
  ca:
    secretName: root-certificate
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: deviceservice-server-certificate
spec:
  secretName: deviceservice-server-certificate
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 4096
  commonName: "deviceservice server"
  usages:
    - server auth
    - key encipherment
    - digital signature
  dnsNames:
  - deviceservice.azure-iot-operations
  - deviceservice.azure-iot-operations.svc
  issuerRef:
    name: root-issuer
    kind: Issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: deviceservice-client-certificate
spec:
  secretName: deviceservice-client-certificate
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 4096
  commonName: "deviceservice client"
  usages:
    - client auth
    - key encipherment
    - digital signature
  issuerRef:
    name: root-issuer
    kind: Issuer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-d
data:
  default.conf: |+
    server {
        listen 8443;
        ssl on;
        server_name     chainz.com www.chainz.com;

        # server certificate
        ssl_certificate     /etc/nginx/servercerts/tls.crt;
        ssl_certificate_key /etc/nginx/servercerts/tls.key;

        # CA certificate
        ssl_client_certificate /etc/nginx/clientcerts/ca.crt;

        # need to validate client certificate(if this flag optional it won't
        # validate client certificates)
        ssl_verify_client on;

        location / {
            # remote ip and forwarding ip
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # certificate verification information
            # if the client certificate verified against CA, the header VERIFIED
            # will have the value of 'SUCCESS' and 'NONE' otherwise
            proxy_set_header VERIFIED $ssl_client_verify;

            # client certificate information(DN)
            proxy_set_header DN $ssl_client_s_dn;

            proxy_pass  http://localhost:8080;
        }
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deviceservice-sa
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "deviceservice-role"
rules:
- apiGroups: ["stable.example.com"]
  resources: ["crontabs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["deviceregistry.microsoft.com"]
  resources: ["assets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: 'rbac.authorization.k8s.io/v1'
kind: 'ClusterRoleBinding'
metadata:
  name: 'deviceservice-binding'
roleRef:
  apiGroup: ''
  kind: 'ClusterRole'
  name: 'deviceservice-role'
subjects:
  - kind: 'ServiceAccount'
    name: 'deviceservice-sa'
    namespace: azure-iot-operations
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deviceservice
  name: deviceservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deviceservice
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deviceservice
    spec:
      serviceAccountName: 'deviceservice-sa'
      containers:
      - name: nginx
        image: ghcr.io/johnsonshih/nginx-mtls:latest
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: nginx-config-d
          mountPath: /etc/nginx/conf.d
        - name: server-certs
          mountPath: /etc/nginx/servercerts
        - name: client-certs
          mountPath: /etc/nginx/clientcerts
      - image: ghcr.io/johnsonshih/deviceservice:latest
        imagePullPolicy: Always
        name: deviceservice
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          - name: ONVIF_SECRET_DIRECTORY
            value: /etc/onvif-secret-volume
        volumeMounts:
          - name: secret-volume
            mountPath: /etc/onvif-secret-volume
            readOnly: true

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: nginx-config-d
        configMap:
          name: nginx-config-d
      - name: server-certs
        secret:
          secretName: deviceservice-server-certificate
      - name: client-certs
        secret:
          secretName: deviceservice-server-certificate
      - name: secret-volume
        secret:
          secretName: onvif-auth-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: deviceservice
  name: deviceservice
spec:
  type: NodePort
  selector:
    app: deviceservice
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8443
