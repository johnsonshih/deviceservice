---
# Source: akri/templates/debug-echo-discovery-handler.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: akri-debug-echo-discovery-daemonset
  labels:
    helm.sh/chart: akri-0.12.19
    app.kubernetes.io/part-of: akri
    app.kubernetes.io/instance: akri-debug-echo-dh
    app.kubernetes.io/version: "0.12.19"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: akri-debug-echo-discovery
    app.kubernetes.io/component: discovery-handler
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: akri
      app.kubernetes.io/instance: akri-debug-echo-dh
      app.kubernetes.io/name: akri-debug-echo-discovery
  template:
    metadata:
      labels:
        helm.sh/chart: akri-0.12.19
        app.kubernetes.io/part-of: akri
        app.kubernetes.io/instance: akri-debug-echo-dh
        app.kubernetes.io/version: "0.12.19"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: akri-debug-echo-discovery
        app.kubernetes.io/component: discovery-handler
    spec:
      containers:
      - name: akri-debug-echo-discovery
        image: "ghcr.io/johnsonshih/akri/debug-echo-discovery:v0.12.12-20240111_215504"
        resources:
          requests:
            memory: 11Mi
            cpu: 10m
          limits:
            memory: 24Mi
            cpu: 26m
        env:
        - name: DISCOVERY_HANDLERS_DIRECTORY
          value: /var/lib/akri
        - name: DEBUG_ECHO_INSTANCES_SHARED
          value: "true"
        volumeMounts:
        - name: discovery-handlers
          mountPath: /var/lib/akri
      nodeSelector:
        "kubernetes.io/os": linux
      volumes:
      - name: discovery-handlers
        hostPath:
          path: /var/lib/akri
