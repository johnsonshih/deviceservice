---
apiVersion: v1
kind: Secret
metadata:
  name: onvif-auth-secret
type: Opaque
stringData:
  3fa1fe68_b915_4053_a3e1_ac15a21f5f91_username: camuser
  3fa1fe68_b915_4053_a3e1_ac15a21f5f91_password: HappyDay!
---
apiVersion: v1
kind: Secret
metadata:
  name: service-certs-secret
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVxVENDQXhHZ0F3SUJBZ0lRTDgyVzRpbExKNGNzOHpNYmhKKzdhVEFOQmdrcWhraUc5dzBCQVFzRkFEQnQKTVI0d0hBWURWUVFLRXhWdGEyTmxjblFnWkdWMlpXeHZjRzFsYm5RZ1EwRXhJVEFmQmdOVkJBc01HSEp2WWtCegpiMjFpY21FdWVEVXlMbVJsZGlBb1VtOWlLVEVvTUNZR0ExVUVBd3dmYld0alpYSjBJSEp2WWtCemIyMWljbUV1CmVEVXlMbVJsZGlBb1VtOWlLVEFlRncweU1ERXdNalV4TnpJeU16bGFGdzB6TURFd01qVXhOakl5TXpsYU1HMHgKSGpBY0JnTlZCQW9URlcxclkyVnlkQ0JrWlhabGJHOXdiV1Z1ZENCRFFURWhNQjhHQTFVRUN3d1ljbTlpUUhOdgpiV0p5WVM1NE5USXVaR1YySUNoU2IySXBNU2d3SmdZRFZRUUREQjl0YTJObGNuUWdjbTlpUUhOdmJXSnlZUzU0Ck5USXVaR1YySUNoU2IySXBNSUlCb2pBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVk4QU1JSUJpZ0tDQVlFQXE4TkEKNWxHWU5ZVXhDa25wRktRMTRSQkpsYkVnamNmSElpOGhwOVRvYnpVaWd5T1FvWjlXNTBXbUNoUnV1QU8vZlhJRwppOGlvZWpvdGVOUFZiSmo3Z2dNS3gxMzI1NmN2REtWUjc5Tktlb0hCU1lVVWpzMk55WlozelBVZVVlMHRYUEhSCko0Uk1XTG1wWUtkSTZOQ1lqRFg2b3VDSWVoNnNpblRPU1YrMGRibmZIdkZHRVNGcFVlaVVkc25DUm9yc2Evb0IKbitoSW41ZHZmdHV4U0RZRGJBRHNTTERxaHhZNHhzUUpLUDAwdU55c0xQMHZld0JxVFNVTE5lSE1OZjBZaHBpeQpvdC90YmNScVFBelN6Ukl2V2VDZ3cwR2NqcVBXMjcvcC94LzRTaDNYempUNncxeFZ0RjdabmlXMzdNNGdRa3ROCkhuTVdWZ2NlcW8wVGFDd28rQjM3WEphL2ZCUkgweDhIbk1kYTFKZVo3WDgvU3p5YzdZRWExTTZaa0tPTmVDRWcKQzcrOGpwL2FUTS8wRHV2SUloeEh3Sy85UEd2V1lERkpueTJKZjhwcTFqSjY2R3IwdVd4UkpIb2JmMmtCK2FGMwpLVXM1bks0OUt3K1RtWmNCK1NiVTI1NmUyd1BodXN4cXhYbllpOVdqZEl5Q3FGM0IxaFl4RWlhUmlGUlRBZ01CCkFBR2pSVEJETUE0R0ExVWREd0VCL3dRRUF3SUNCREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUIwR0ExVWQKRGdRV0JCUitsYVE3bVZpbEFuUGlpYWhWMVhPNjVtZWZ6VEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBWUVBZTNBNQo1ejVKV0hTWEVjUUkvTHN0QVZKZmlsb2VoeWh2WWdjTnBJbWxzbTVBNDFWek1kMWlXZHBMWStXU0tXakhLRnMwCnU1SWQrc0dFWlJIQmljWUR0czBhekgzU2tsajBGck5ycFJkdmY4akp1TXZWQzFFb1VGaWpHK1YvUmRMMTRieHEKa3lwNWR0eFZjdnR2VUxUK0lENXZTVllCd0dPQnAzNkZnNVFzNFFPdVNQa1ZHd2phRWRKdnpxYjFYRExuY3N2ZQphcDZBTHp3T1hVc044SWNycTQvR2xWRFgxMXJPbmZXaE5RUmlXS0p0aW40dnp4TDAwMnJQV3dTc2VrY3VMRUZRCk5DQllhQkJEbHA0ZkxoMlhWdUI3eHZLWFRQbThLOWhJeHJUQkVoOGtqOHA1cDk1RE9UV3BMZ1h1QmNkWG1ORFYKLzROQnpzV3d1TzNJNy9pbEhiSCtnRXNNMzkwcDA1NkJtdjJjRjBiV2IreFQydnlOeW1obVNDbjc3UUVtY3NPRgpMRHFzakRjN0pzUUdVVklBZ3RNNTBtZC9RdmFYeFRWb0FNWHRTV2V5SzhRc0Myc3lacVdsWGlZa3J3WWpwK0tJCjZqWDRFcEx3S2RRT3paZGpnbkladkc5NG81bFI4Y1B5WmxhVUtWdW5PVHZBWGlUM0FXZUJwcENrNlNFSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  server.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVTakNDQXJLZ0F3SUJBZ0lSQUtOVEhkV3NyS0tDcEt0MTlDL3NJNFV3RFFZSktvWklodmNOQVFFTEJRQXcKYlRFZU1Cd0dBMVVFQ2hNVmJXdGpaWEowSUdSbGRtVnNiM0J0Wlc1MElFTkJNU0V3SHdZRFZRUUxEQmh5YjJKQQpjMjl0WW5KaExuZzFNaTVrWlhZZ0tGSnZZaWt4S0RBbUJnTlZCQU1NSDIxclkyVnlkQ0J5YjJKQWMyOXRZbkpoCkxuZzFNaTVrWlhZZ0tGSnZZaWt3SGhjTk1Ua3dOakF4TURBd01EQXdXaGNOTXpBeE1ESTFNVGN6T0RNNFdqQk0KTVNjd0pRWURWUVFLRXg1dGEyTmxjblFnWkdWMlpXeHZjRzFsYm5RZ1kyVnlkR2xtYVdOaGRHVXhJVEFmQmdOVgpCQXNNR0hKdllrQnpiMjFpY21FdWVEVXlMbVJsZGlBb1VtOWlLVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTkR2MG9SdXBBR3RBbDlaWlRlVHdkVG9ZaC9HdGFqM2JBeWhRUXorZFE1R3pMUzMKK1p2bzNkYWVwd25vTkFCb3h1UHdwdGIvako2RWM4cmR2VWlKa0tiK2pBdVowdlN1RXFQVGNndmJucXNWKzdVVAo4V2xlQ1VuT0lZNkZCK3VUYUxFcHR1NWsrUGY3aTNtMVJxVzFnUlZsWWNIc0x1djNOQlFXMGJ6K1hVWnZjaXJXCktWQ3h6MmV4MmFGeldYckFaRXVPd01YK3grV2ljZDR0UmZjaW80bU9JK2pDUkNzYndXMFRzeVdTdHJpbWNibDAKbGRiUmk4RGVBRGYzVlBRQ01ZbWNKQVJZc1RmUndLNzVPRk1nbUQwR1RpOFdVUldRQ2JUSm53em9wN0ZhbW5vMAovSS9FZjY1RG5nbGViNkh3RzkxRXRFVlU3UUhxU1hsVUs0MUF1OWtDQXdFQUFhT0JoVENCZ2pBT0JnTlZIUThCCkFmOEVCQU1DQmFBd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3RXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlYKSFNNRUdEQVdnQlIrbGFRN21WaWxBblBpaWFoVjFYTzY1bWVmelRBc0JnTlZIUkVFSlRBamdnbHNiMk5oYkdodgpjM1NIQkg4QUFBR0hFQUFBQUFBQUFBQUFBQUFBQUFBQUFBRXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnR0JBSkowCjdvRGtWbWRCL1AwUFgwdkluK0NQbWlFOElyTzhzdEl0T0dsVlJ5OVREV0ZSZE1wWTEzQk9qbE5ZMmVmTlUyVHoKb3IrbHlmVjdEOFBpQ2s1cTNlOHNMdE9sSUFUMzJJUklyR1hsNUU0cTd6RG5PY2tRalpJVVp3U0ZBRlZ5Z3k0RgpyUGdKQ1M5dXF6OXZ6MDg2U3lSRDBrclRNNXU5eU1BdkcydUpMRWs1b2FWV0FLZERScGxTdG1NeDdRUUhNWjRHCmlOWU1EcGo0ZFU0Z2tydlplQytKS3dqYlNKM2hqZThDWkNBMWF0enovNVdXRXQyRDhZZjl0dzI3VC9oaW5yTWkKcnJqUHBFY0E2Qzh3dkh4cVlwaXB0UUMxRkY1dmFVeVJxakYraXJIZ1FkTlVDRTBuSlN3QXNJRFcwVERpVkdERApPSktzNkVZdXpKOE9jV3c2SUZ4OFlOdmR4WkpTcjhTYWF2ckg3Nm15SGllVGtxaFd2alNRRVJVdzcxaVV3ZTBxCjVOZXYrSjJOOVU3b1pCVENJc0QvcUtPUVREOW1SakpwWUxuWE5xRXlKaHpSZ0NBNStUUUlYYlRhMTBlbzlTdmcKQ1RrcXhzaXhtZFRLRDhaSWxVUGhMSTllaHIwU3BidCsyWGgzeUF0bFNyZkF0NXAyaGdWQ294YWxFd1dwd0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  server.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRRFE3OUtFYnFRQnJRSmYKV1dVM2s4SFU2R0lmeHJXbzkyd01vVUVNL25VT1JzeTB0L21iNk4zV25xY0o2RFFBYU1iajhLYlcvNHllaEhQSwozYjFJaVpDbS9vd0xtZEwwcmhLajAzSUwyNTZyRmZ1MUUvRnBYZ2xKemlHT2hRZnJrMml4S2JidVpQajMrNHQ1CnRVYWx0WUVWWldIQjdDN3I5elFVRnRHOC9sMUdiM0lxMWlsUXNjOW5zZG1oYzFsNndHUkxqc0RGL3NmbG9uSGUKTFVYM0lxT0pqaVBvd2tRckc4RnRFN01sa3JhNHBuRzVkSlhXMFl2QTNnQTM5MVQwQWpHSm5DUUVXTEUzMGNDdQorVGhUSUpnOUJrNHZGbEVWa0FtMHlaOE02S2V4V3BwNk5QeVB4SCt1UTU0SlhtK2g4QnZkUkxSRlZPMEI2a2w1ClZDdU5RTHZaQWdNQkFBRUNnZ0VBWjhQelpWb2RrY2QrdWlRSHBNWjVLV2dQODRBWWtFWHhINFNtYmZHaDZPazQKbVRnVmUxejNiN056ZWZRY2YyZUovNEp4R2EzcEJJRDdrUEQzSktOTmQrSkxZeWVPSVg2aU8wSzBEVGVSWVo2VgpWNlVEN0RTTG9HQURRbWpIT2pRSGRwVWxDTmlVM1hQTUhUSHVXRFlBV2NQei9QOXpmalZUWS9iQlMzOTRpNVcvCm5GTEhNRUdELzlLRVRVbTJXZG11Kzg0ZmhBZytnU2JET0hLT21ycWlSb1NtQkluZlVFalRMMjJnVTFoUGtqV1kKMTdpOXZlTUdWUFFlQTg5WFltRmF2Z1dJTUh3aU9EMEZvbTJ5MjZPSURXRFhBSmY3b09vT05FbFdGMk9qaVNBYQo3SUhsOEVFRC9hREl0OVh5djhKOXFYemtBdExQWE84dkZHMlVxMC9CUVFLQmdRRDFNbENzbk1WZjNkY2s4eWc2Cll3RmtGSFp4bkZCekJQd3VEb01EMk9CSVpjcndjQmhVUW8wdThNME5vaGdqdkJCN1hVclcrLzV1Y0Y5QmFlY0MKM1J6L0p3UGs3b1BhZllWYkVGR3YrQ2VHSkZLTC9scTdOd0Y2Mk43RVlvM04yaWpZakdZaVpGbXhnT1ZFZnpTZApXUlNIK2I2UTkyM2xFcFdvRmFlRnd3KzVIUUtCZ1FEYUpJUlRyMXN0WFhGWFZqL0VUSkc0dVQzSTdxbGZSN3pwCi90L1lIWDZRblY1ZEZkQkNFWFNXNDFZb3F2VW4xMk94MjhudlFNREZXVmtRR2ZBRUxZcWtmL296QlE5ZDZlZTgKM2JVOVYxNFlXYUdTSzFSVDgzY2dXVXREblVqdEx1azlNRys1eDNFUWNmcTVuZzZ1ZCtIcjh1dCtnejBQYkxjSwpnUjN1VFFrTTdRS0JnRU5VU2FyY2NhWmRlRktCSXE3RnVRQU9UbWZzRUh0RkJ5cHVlYk40dmoyakZoTG45UVpPCk1BNlB1UDdoWDllUU1NWnZXN21sQUx5NnhxMWpzemVxRitoSWdsMCswWjRSa2FqcjFrS0gxZktUenNiNlZWZkwKUnZEQTFJc0F0UWV0dkVHYWJBRk5wUU9FN1cvZHJrajJ5Umg5ajhLbTd0cFVQQndudGhTWTk1eFJBb0dBTDV1dQpvWkR3eGpyUmhLMFhKNkZLWUZWVlRhZ0FvUUhJRWcyRkR1YUkrOGpNa21ZeldHZjAyUVZ1aFZ1aU8zcS9rRTZXCmlMZktHb2dBYndvcUhzOU5wYzhrYk1RYThYVWVGVk1SdmZ4MlZid2lEZ09VMk9tV3d5R1owbnplTUoxL1c5SloKWCtOT0lyZXRiNXMyT3crQTUvelJOb0F2OEZEYXRka3VEaGNUOVpVQ2dZQnRFSTlwbVdZWHhHZmFWUUVySmNzUwozYThQVTg3NXNFMDZEaUVjdm9vbGpjTHA2ZENtR29jUlFPR3BTWGZ5M3pqWDRGL0haakRLK0dLUGcyYkNpcktyCm5SUFdmMHQzRFNlU3lESU5qK2EwZmc0S3ZZUjRGY29jSkR6VEZKaC85Q3J0Tmt0cXdIQXFyUVVTb2tCYlc4bjYKS2ovQVlMV09JWEFUZkNyT2dkb0FBZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-d
  namespace: default
data:
  default.conf: |+
    server {
        listen 8443;
        ssl on;
        server_name     chainz.com www.chainz.com;

        # server certificate
        ssl_certificate     /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        # CA certificate
        ssl_client_certificate /etc/nginx/certs/ca.crt;

        # need to validate client certificate(if this flag optional it won't
        # validate client certificates)
        ssl_verify_client on;

        location / {
            # remote ip and forwarding ip
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # certificate verification information
            # if the client certificate verified against CA, the header VERIFIED
            # will have the value of 'SUCCESS' and 'NONE' otherwise
            proxy_set_header VERIFIED $ssl_client_verify;

            # client certificate information(DN)
            proxy_set_header DN $ssl_client_s_dn;

            proxy_pass  http://localhost:8080;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        testService: service-1
    spec:
      containers:
      - name: nginx
        image: ghcr.io/johnsonshih/nginx-mtls:latest
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: nginx-config-d
          mountPath: /etc/nginx/conf.d
        - name: nginx-service-certs
          mountPath: /etc/nginx/certs
      - name: deviceservice
        image: ghcr.io/johnsonshih/deviceservice:latest
        imagePullPolicy: Always
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          - name: ONVIF_SECRET_DIRECTORY
            value: /etc/onvif-secret-volume
        volumeMounts:
          - name: secret-volume
            mountPath: /etc/onvif-secret-volume
            readOnly: true
      volumes:
      - name: nginx-config-d
        configMap:
          name: nginx-config-d
      - name: nginx-service-certs
        secret:
          secretName: service-certs-secret
      - name: secret-volume
        secret:
          secretName: onvif-auth-secret
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
    testService: service-1
  type: NodePort
  ports:
  - name: http
    port: 443
    targetPort: 8443
    nodePort: 30081
